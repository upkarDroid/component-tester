import React from "react";
import { storiesOf } from "@storybook/react";
import Button from "Components/Button";
import Stack, { Wrapper } from "../src/helpers/story-stack";
import Example from "../src/helpers/story-example";
import { action } from "@storybook/addon-actions";
import withDocs from "storybook-readme/with-docs";
import ButtonReadme from "Components/Button/README.md";

storiesOf("Button", module)
  .add(
    "Info",
    withDocs(ButtonReadme, () => (
      <Wrapper>
        <Button onClick={action("button-click=default")}>Button</Button>
        <Button appearance="outline">outline</Button>
        <Button btnColor="red">Red</Button>
        <Button appearance="outline" btnColor="red">
          outline
        </Button>
        <Button appearance="outline" btnColor="purple">
          purple
        </Button>
      </Wrapper>
    ))
  )
  .addWithChapters("Usage", {
    subtitle: "Button Atomic component",
    info:
      "Supported colors are only primary colors and can be passed through btnColor property",
    chapters: [
      {
        title: "Button variants",
        info: `
        ~~~js
        import Button from 'WebUiKit';
        ~~~
        `,
        sections: [
          // List of sections.
          {
            title: "Default",
            subtitle: "Default",
            sectionFn: () => {
              return (
                <Wrapper>
                  <Button btnColor="purple">Button</Button>
                  <Button appearance="outline" btnColor="blue">
                    blue
                  </Button>
                  <Button btnColor="red">red</Button>
                  <Button appearance="outline" btnColor="red">
                    red
                  </Button>
                  <Button appearance="outline" btnColor="green">
                    green
                  </Button>
                </Wrapper>
              );
            },
            options: {
              showSource: false,
              allowSourceToggling: true,
              showPropTables: true,
              allowPropTablesToggling: true
            }
          },
          {
            title: "Sizes",
            sectionFn: () => {
              return (
                <div>
                  <Example title="Solid Buttons">
                    <Stack align="space-between">
                      <Button btnColor="red" size="large">
                        large Button
                      </Button>
                      <Button btnColor="red">Default</Button>
                      <Button btnColor="red" size="compressed">
                        compressed
                      </Button>
                      <Button btnColor="red" size="small">
                        small
                      </Button>
                    </Stack>
                  </Example>
                  <Example title="Outlined Buttons">
                    <Stack align="space-between">
                      <Button btnColor="red" size="large" appearance="outline">
                        large Button
                      </Button>
                      <Button btnColor="red" appearance="outline">
                        Default
                      </Button>
                      <Button
                        btnColor="red"
                        size="compressed"
                        appearance="outline"
                      >
                        compressed
                      </Button>
                      <Button
                        btnColor="red"
                        size="small"
                        appearance="outline"
                        icon="star"
                      />
                    </Stack>
                  </Example>
                </div>
              );
            },
            options: {
              showSource: false,
              allowSourceToggling: true,
              showPropTables: false,
              allowPropTablesToggling: false
            }
          },
          {
            title: "Disabled",
            subtitle: "Default",
            sectionFn: () => {
              return (
                <Example>
                  <Stack>
                    <Button disabled btnColor="purple">
                      Button
                    </Button>
                    <Button appearance="outline" disabled btnColor="blue">
                      blue
                    </Button>
                    <Button disabled btnColor="red">
                      red
                    </Button>
                    <Button appearance="outline" disabled btnColor="yellow">
                      yellow
                    </Button>
                    <Button appearance="outline" disabled btnColor="blue">
                      blue
                    </Button>
                  </Stack>
                </Example>
              );
            },
            options: {
              showSource: false,
              allowSourceToggling: true,
              showPropTables: false,
              allowPropTablesToggling: false
            }
          },
          {
            title: "Loading",
            sectionFn: () => {
              return (
                <Example>
                  <Stack>
                    <Button loading btnColor="purple">
                      Button
                    </Button>
                    <Button appearance="outline" loading btnColor="blue">
                      blue
                    </Button>
                    <Button loading btnColor="yellow">
                      yellow
                    </Button>
                    <Button appearance="outline" loading btnColor="red">
                      red
                    </Button>
                    <Button appearance="outline" loading btnColor="green">
                      green
                    </Button>
                  </Stack>
                </Example>
              );
            },
            options: {
              showSource: false,
              allowSourceToggling: true,
              showPropTables: false,
              allowPropTablesToggling: false
            }
          },
          {
            title: "Icons",
            sectionFn: () => {
              return (
                <div>
                  <Example title="Icon on Left">
                    <Stack>
                      <Button btnColor="purple" icon="star">
                        Button
                      </Button>
                      <Button appearance="outline" btnColor="blue" icon="moon">
                        blue
                      </Button>
                      <Button btnColor="yellow" icon="location">
                        yellow
                      </Button>
                      <Button
                        appearance="outline"
                        btnColor="red"
                        icon="location"
                      >
                        red
                      </Button>
                      <Button appearance="outline" btnColor="green" icon="star">
                        green
                      </Button>
                    </Stack>
                  </Example>
                  <Example title="Icon on right">
                    <Stack align="space-between">
                      <Button btnColor="purple" icon="star" iconAlign="right">
                        Button
                      </Button>
                      <Button
                        appearance="outline"
                        btnColor="blue"
                        icon="moon"
                        iconAlign="right"
                      >
                        blue
                      </Button>
                      <Button
                        btnColor="yellow"
                        icon="location"
                        iconAlign="right"
                      >
                        yellow
                      </Button>
                      <Button
                        appearance="outline"
                        btnColor="red"
                        icon="location"
                        iconAlign="right"
                      >
                        red
                      </Button>
                      <Button
                        appearance="outline"
                        btnColor="green"
                        icon="star"
                        iconAlign="right"
                      >
                        green
                      </Button>
                    </Stack>
                  </Example>
                </div>
              );
            },
            options: {
              showSource: false,
              allowSourceToggling: true,
              showPropTables: false,
              allowPropTablesToggling: false
            }
          },
          {
            title: "Colors",
            subtitle: "Colour should be one of Primary colors",
            sectionFn: () => {
              return (
                <React.Fragment>
                  <Example title="Solid Buttons">
                    <Stack align="fill">
                      <Button>Default</Button>
                      <Button btnColor="red">red</Button>
                      <Button btnColor="green">green</Button>
                      <Button btnColor="blue">blue</Button>
                      <Button btnColor="yellow">yellow</Button>
                      <Button btnColor="purple">purple</Button>
                    </Stack>
                  </Example>
                  <Example title="outlined Buttons">
                    <Stack align="fill">
                      <Button>Default</Button>
                      <Button btnColor="red" appearance="outline">
                        red
                      </Button>
                      <Button btnColor="green" appearance="outline">
                        green
                      </Button>
                      <Button btnColor="blue" appearance="outline">
                        blue
                      </Button>
                      <Button btnColor="yellow" appearance="outline">
                        yellow
                      </Button>
                      <Button btnColor="purple" appearance="outline">
                        purple
                      </Button>
                    </Stack>
                  </Example>
                </React.Fragment>
              );
            },
            options: {
              showSource: false,
              allowSourceToggling: true,
              showPropTables: false,
              allowPropTablesToggling: true
            }
          }
        ]
      }
    ]
  });
