// Libraries
import React, { useState, useEffect } from "react";
import PropTypes from "prop-types";
import { noop as _noop } from "lodash-es";
import styled from "styled-components";

// Helpers
import { defaultView, errorView, eventManager } from "./componentHelpers";
import misc from "../../tokens/misc";

const ImageUploader = props => {
  const [hover, setHover] = useState(false);
  const [errorMsg, setErrorMsg] = useState("");

  useEffect(() => {
    const params = {
      onChange: props.onChange,
      setHover,
      setErrorMsg
    };

    // creating events on mount
    eventManager(window.addEventListener, params);
    return () => {
      // removing events on unmount
      eventManager(window.removeEventListener, params);
    };
  }, [props.onChange]);

  const params = {
    ...props,
    setHover,
    hover,
    errorMsg,
    setErrorMsg
  };

  return (
    <ImageUploader.Element className={props.classname}>
      <header>
        <label>{props.label}</label>
        {props.secondSourceLink ? (
          <a className="secondary-source" href={props.secondSourceLink}>
            {props.secondSourceLbl}
          </a>
        ) : null}
      </header>
      {errorMsg ? errorView(params) : defaultView(params)}
    </ImageUploader.Element>
  );
};

ImageUploader.Element = styled.div`
  box-shadow: 0 1px 8px rgba(28, 28, 28, 0.15);
  border-radius: ${misc.radius};
  padding: 20px;

  header {
    padding: 4px 0 24px;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  label {
    font-size: 17px;
    line-height: 20px;
  }

  .secondary-source {
    cursor: pointer;
    font-size: 14px;
    line-height: 20px;
    color: #28a745;
    text-decoration: none;
  }
`;

ImageUploader.defaultProps = {
  onChange: _noop,
  multiple: false
};

ImageUploader.propTypes = {
  label: PropTypes.string.isRequired,
  btnLabel: PropTypes.string.isRequired,
  secondSourceLink: PropTypes.string,
  secondSourceLbl: PropTypes.string,
  classname: PropTypes.string,
  btnSubTitle: PropTypes.string,
  onChange: PropTypes.func,
  multiple: PropTypes.bool
};

export default ImageUploader;
