// libraries
import React from "react";
import PropTypes from "prop-types";
import { noop as _noop } from "lodash-es";
import styled from "styled-components";
import Label from "Components/Label";
import { white } from "ZColors";

// helpers
import { getAttributes } from "./radioHelpers";

export const Radio = props => (
  <Radio.Wrapper>
    <Label>
      <Radio.Element {...props} type="radio" />
      <Radio.Label>{props.label}</Radio.Label>
    </Label>
  </Radio.Wrapper>
);

Radio.Label = styled.span`
  padding-top: 0.2rem;
`;

Radio.Wrapper = styled.div`
  width: max-content;
  margin-bottom: 0.9rem;
  margin-right: 1rem;
`;

export const cursorVal = getAttributes("cursor");

Radio.Element = styled.input`
  appearance: none;
  cursor: ${cursorVal};
  outline: 0;
  border-radius: 50%;
  margin-right: 0.8rem;
  width: 1.8rem;
  height: 1.8rem;
  background: ${white};
  display: inline-flex;
  border: 0.1rem solid ${getAttributes("borderColor")};
  box-sizing: border-box;
  position: relative;
  justify-content: center;
  align-items: center;
  transition: all 0.5s linear;
  ${Radio.Wrapper}:hover & {
    border-color: ${getAttributes("hoverBorderColor")};
  }

  &:checked::before {
    position: absolute;
    width: 1.1rem;
    height: 1.1rem;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    content: "";
    border-radius: 50%;
    background-color: ${getAttributes("selectedBgColor")};
    transition: all 0.5s linear;
  }
`;

Radio.propTypes = {
  class: PropTypes.string,
  label: PropTypes.string,
  value: PropTypes.string,
  color: PropTypes.string,
  checked: PropTypes.bool,
  onClick: PropTypes.func,
  disabled: PropTypes.bool
};

Radio.defaultProps = {
  value: "1",
  disabled: false,
  onClick: _noop,
  checked: false
};

export default Radio;
