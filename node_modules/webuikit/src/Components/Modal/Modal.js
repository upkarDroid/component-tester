import React from "react";
import styled from "styled-components";
import PropTypes from "prop-types";
import Portal from "../HOC/Portal";
import { noop as _noop } from "lodash-es";

const modalWidth = {
  small: "20vw",
  medium: "40vw",
  large: "60vw",
  default: "max-content"
};

const ModalDOM = ({
  onClose = _noop,
  visible = false,
  type = "default",
  children = null
}) => {
  const handleCloseClick = e => {
    e.preventDefault();
    e.stopPropagation();
    onClose();
  };
  const suppressClick = e => {
    e.preventDefault();
    e.stopPropagation();
  };
  return (
    <ModalHolder onClick={handleCloseClick} visible={visible}>
      <ModalContainer onClick={suppressClick} type={type}>
        {children}
      </ModalContainer>
    </ModalHolder>
  );
};

ModalDOM.propTypes = {
  children: PropTypes.node,
  onClose: PropTypes.func.isRequired,
  visible: PropTypes.bool,
  type: PropTypes.string
};

ModalDOM.defaultProps = {
  children: null
};

const getModalWidth = type => {
  return modalWidth[type];
};

const handleDisplay = visible => {
  return visible ? "flex" : "none";
};

const ModalHolder = styled.div`
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.6);
  display: ${props => handleDisplay(props.visible)};
  align-items: center;
  justify-content: center;
`;

const ModalContainer = styled.div`
  width: ${props => getModalWidth(props.type)};
  min-height: 150px;
  padding: 10px;
  background: #fff;
  border-radius: 4px;
  box-shadow: 0 3px 18px 3px rgba(0, 0, 0, 0.7);
`;
const Modal = props => (
  <Portal>
    <ModalDOM {...props}>{props.children}</ModalDOM>
  </Portal>
);

Modal.propTypes = {
  type: PropTypes.oneOf(["small", "medium", "large", "default"]),
  children: PropTypes.node,
  onClose: PropTypes.func.isRequired
};

export default Modal;
