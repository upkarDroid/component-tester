import React from "react";
import PropTypes from "prop-types";
import styled from "styled-components";
import { getCDN } from "../../helpers/commonHelper";

const WIDTH_THRESHOLD = 40;

// Actual image sizes
const DEFAULT_WIDTH = 137;
const WIDTH_2X = 274;
const WIDTH_3X = 411;
const logo_urls = {
  playstore: {
    url_logo_1x: "data/webuikit/61f7c9690d8ba4525ba863d0914ef2aa1556001313.png",
    url_logo_2x: "data/webuikit/23e930757c3df49840c482a8638bf5c31556001144.png",
    url_logo_3x: "data/webuikit/171050f49cdf259cff90fa3b21a87ccd1556001348.png",
    url_logo_4x: "data/webuikit/a336792fc43e33ed4df43cfd3ff542431556001376.png"
  },
  appstore: {
    url_logo_1x: "data/webuikit/69c8ac2b881b7ae167c36b480580274e1556003577.png",
    url_logo_2x: "data/webuikit/9f0c85a5e33adb783fa0aef667075f9e1556003622.png",
    url_logo_3x: "data/webuikit/bd19aa0be8dd3a92e58861cb82b9bccb1556003662.png",
    url_logo_4x: "data/webuikit/9b91a3427bae3d2bf001e3a97f52c7111556003706.png"
  }
};

const Store = props => {
  const { type = "appstore", width = DEFAULT_WIDTH, link = "" } = props;
  const height = parseInt(width * (40 / 137));
  const url = getUrl(type, width);
  return (
    <Store.A href={link}>
      <Store.Image width={width} height={height} url={url} />
    </Store.A>
  );
};

const getUrl = (type, width) => {
  let url;
  if (width <= DEFAULT_WIDTH + WIDTH_THRESHOLD) {
    url = logo_urls[type].url_logo_1x;
  } else if (width <= WIDTH_2X + WIDTH_THRESHOLD) {
    url = logo_urls[type].url_logo_2x;
  } else if (width <= WIDTH_3X + WIDTH_THRESHOLD) {
    url = logo_urls[type].url_logo_3x;
  } else {
    url = logo_urls[type].url_logo_4x;
  }

  return getCDN(url);
};

Store.A = styled.a`
  text-decoration: none;
`;

Store.Image = styled.div`
  width: ${props => props.width / 10}rem;
  height: ${props => props.height / 10}rem;
  background-image: url(${props => props.url});
  background-repeat: no-repeat;
  background-size: 100%;
  @media (max-width: 480px) {
    width: 11rem;
    height: calc(11rem * (40 / 137));
  }
`;

Store.propTypes = {
  type: PropTypes.oneOf(["appstore", "playstore"]),
  width: PropTypes.number,
  link: PropTypes.string
};

export default Store;
