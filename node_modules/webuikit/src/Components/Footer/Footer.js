import React from "react";
import styled, { css } from "styled-components";
import { grey } from "ZColors";
import PropTypes from "prop-types";
import Icon from "Components/Icon";
import { Appstore, Playstore } from "Components/Logo";
import CountryDropdown from "Components/CountryDropdown";
import LanguageDropdown from "Components/LanguageDropdown";
import { noop as _noop } from "lodash-es";

import {
  companyContent,
  foodiesContent,
  restaurantsContent,
  forYouContent,
  icons,
  disclaimer,
  countries,
  languages
} from "./contents";

const Footer = props => {
  const { onCountrySelect = _noop, onLanguageSelect = _noop } = props;
  return (
    <Footer.Wrapper>
      <Footer.Content>
        <Footer.List>
          <Footer.Locale
            onCountrySelect={onCountrySelect}
            onLanguageSelect={onLanguageSelect}
          />
          <Footer.Column name="Company" content={companyContent} />
          <Footer.Column name="For Foodies" content={foodiesContent} />
          <Footer.Column name="For Restaurants" content={restaurantsContent} />
          <Footer.Column name="For you" content={forYouContent} />
          <Footer.Links name="Social links" icons={icons} />
        </Footer.List>
        <Footer.HR />
        <Footer.Disclaimer>{disclaimer}</Footer.Disclaimer>
      </Footer.Content>
    </Footer.Wrapper>
  );
};

Footer.propTypes = {
  onCountrySelect: PropTypes.func,
  onLanguageSelect: PropTypes.func
};

Footer.Disclaimer = styled.p`
  font-size: 1.1rem;
  color: ${grey.z800};
  text-align: center;
  line-height: 1.3rem;
  margin-top: 2.3rem;
  @media (max-width: 480px) {
    margin-bottom: 3rem;
  }
`;

Footer.Links = props => {
  const { name = "", icons = [] } = props;
  return (
    <Footer.LinksContainer>
      <Footer.Heading>{name}</Footer.Heading>
      <Footer.IconContainer>
        {icons.map(icon => (
          <Footer.Item.A key={icon.name} href={icon.link} isIcon={true}>
            <Icon name={icon.name} size={20} />
          </Footer.Item.A>
        ))}
      </Footer.IconContainer>
    </Footer.LinksContainer>
  );
};

Footer.Column = props => {
  const { name = "", content = [] } = props;
  return (
    <Footer.ColumnContainer>
      <Footer.Heading>{name}</Footer.Heading>
      {content.map(row => (
        <Footer.Item key={row.label} label={row.label} link={row.label} />
      ))}
    </Footer.ColumnContainer>
  );
};

Footer.Item = props => {
  return (
    <Footer.Item.A href={props.link}>
      <Footer.Item.P>{props.label}</Footer.Item.P>
    </Footer.Item.A>
  );
};

Footer.Locale = props => {
  const { onCountrySelect = _noop, onLanguageSelect = _noop } = props;
  const handleCountrySelect = country => onCountrySelect(country);
  const handleLangSelect = lang => onLanguageSelect(lang);
  return (
    <Footer.LocaleContainer>
      <Footer.DropdownContainer>
        <CountryDropdown
          country="India"
          value="india"
          countries={countries}
          onSelect={handleCountrySelect}
        />
        <Gap />
        <LanguageDropdown
          lang="English"
          value="EN"
          languages={languages}
          onSelect={handleLangSelect}
        />
      </Footer.DropdownContainer>
      <Gap />
      <Footer.StoreLinksContainer>
        <Appstore link="/appstore" />
        <Gap />
        <Playstore link="/playstore" />
      </Footer.StoreLinksContainer>
    </Footer.LocaleContainer>
  );
};

Footer.Locale.propTypes = {
  onCountrySelect: PropTypes.func,
  onLanguageSelect: PropTypes.func
};

Footer.DropdownContainer = styled.section`
  @media (max-width: 768px) and (min-width: 481px) {
    display: flex;
    align-items: center;
  }
`;

Footer.StoreLinksContainer = styled.section`
  @media (max-width: 768px) and (min-width: 481px) {
    display: flex;
    align-items: center;
  }
`;

const Gap = styled.div`
  margin-top: 1.2rem;
  @media (max-width: 768px) and (min-width: 481px) {
    margin-right: 1.2rem;
  }
`;

Footer.Links.propTypes = {
  name: PropTypes.string,
  icons: PropTypes.array
};

Footer.Column.propTypes = {
  name: PropTypes.string,
  content: PropTypes.array
};

Footer.Item.propTypes = {
  label: PropTypes.string,
  link: PropTypes.string
};

Footer.HR = styled.hr`
  margin-top: 5rem;
  border: 0;
  border-top: 1px solid ${grey.z300};
  @media (max-width: 480px) {
    margin-top: -0.6rem;
  }
`;

Footer.LinksContainer = styled.div`
  display: flex;
  flex-direction: column;
`;

Footer.IconContainer = styled.div`
  display: flex;
  justify-content: flex-start;
  @media (max-width: 550px) and (min-width: 481px) {
    flex-direction: column;
  }
`;

Footer.Item.P = styled.p`
  font-size: 1.4rem;
  line-height: 2.1rem;
  color: ${grey.z800};
  margin: 0.5rem 0;
  @media (max-width: 480px) {
    font-size: 1.3rem;
    line-height: 1.6rem;
  }
`;

Footer.Item.A = styled.a`
  text-decoration: none;
  ${props =>
    props.isIcon &&
    css`
      margin-right: 0.6rem;
      @media (max-width: 550px) and (min-width: 481px) {
        margin-top: 0.6rem;
      }
    `}
`;

Footer.Heading = styled.h6`
  font-size: 1.8rem;
  font-weight: 500;
  margin: 0 0 1.2rem 0;
`;

Footer.LocaleContainer = styled.div`
  width: 20rem;
  @media (max-width: 480px) {
    width: unset;
    margin-bottom: 3rem;
  }
  @media (max-width: 768px) and (min-width: 481px) {
    position: absolute;
    top: 4rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: calc(100% - 4.8rem);
  }
`;
Footer.ColumnContainer = styled.div`
  margin-right: 1rem;
  width: max-content;
  @media (max-width: 480px) {
    margin-bottom: 3rem;
  }
`;

Footer.Wrapper = styled.section`
  width: 100%;
  background: ${grey.z100};
  display: flex;
  justify-content: center;
  margin-top: 50rem;
`;

Footer.Content = styled.div`
  max-width: 90rem;
  width: 90rem;
  height: 100%;
  padding: 4.8rem 2.8rem 2.2rem 3rem;
  position: relative;
  @media (max-width: 768px) and (min-width: 481px) {
    padding: 4.8rem 2.4rem 2.2rem 2.4rem;
  }
`;

Footer.List = styled.section`
  display flex;
  justify-content: space-between;
  @media (max-width: 480px) {
    display: grid;
    grid-template-areas: "first second";
  }
  @media (max-width: 768px) and (min-width: 481px) {
    margin-top: 10.5rem;
  }
`;

export default Footer;
