import React, { useEffect, useRef } from "react";
import PropTypes from "prop-types";
import styled from "styled-components";

const OnClickOutside = props => {
  const node = useRef();

  useEffect(() => {
    document.addEventListener("mousedown", handleOutsideClick);
    return () => {
      document.removeEventListener("mousedown", handleOutsideClick);
    };
  });

  const handleOutsideClick = e => {
    if (node.current && node.current.contains(e.target)) {
      return;
    }
    props.onClickOutside();
  };

  return (
    <OnClickOutside.Wrapper ref={node}>{props.children}</OnClickOutside.Wrapper>
  );
};

OnClickOutside.Wrapper = styled.div`
  width: max-content;
`;

OnClickOutside.propTypes = {
  children: PropTypes.node,
  onClickOutside: PropTypes.func.isRequired
};

export default OnClickOutside;

// USAGE:
/*
 *   <OnClickOutside onClickOutside={handleClickOutside}>
 *     // your component here
 *   </OnClickOutside>
 *
 *   const handleClickOutside = {
 *     // handle outside click
 *   };
 */
