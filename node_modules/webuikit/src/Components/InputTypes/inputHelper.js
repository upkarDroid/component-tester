import { input } from "../../tokens/colors";
import {
  input as inputSize,
  inputPhFocused,
  inputPhDefault,
  inputPadding
} from "../../tokens/sizes";

const getPadding = (top, right, bottom, left) =>
  `${top}rem ${right}rem ${bottom}rem ${left}rem`;

const getInputAttributes = props => {
  // Get the styles for the button's selected size.
  const colorStyle = input[props.state];
  const { vPadding, hzPadding } = inputPadding;

  const pright = props.icon ? hzPadding + 2.3 : hzPadding;
  const focusedPadding = getPadding(
    vPadding - 0.05,
    pright - 0.05,
    vPadding - 0.05,
    hzPadding - 0.05
  );
  const padding =
    props.state == "focused"
      ? focusedPadding
      : getPadding(vPadding, pright, vPadding, hzPadding);

  return { ...colorStyle, ...inputSize, width: props.width, padding };
};

const getLabelAttributes = props => {
  if (props.state === "disabled") {
    return {
      ...inputPhFocused,
      labelBackground: input.disabled.background
    };
  }
  if (props.showLbl) {
    return {
      ...inputPhFocused,
      background: input.default.background
    };
  }

  return {
    ...inputPhDefault,
    background: input.default.background
  };
};

const getAttributes = key => props => getInputAttributes(props)[key];
const getLabelAttr = key => props => getLabelAttributes(props)[key];
const getState = (props, focused) => {
  if (props.disabled) {
    return "disabled";
  }

  if (focused) {
    return "focused";
  }

  return "default";
};

export { getAttributes, getLabelAttr, getState };
